'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-5fdf03c1.js');
const index$1 = require('./index-53f5a5fc.js');
const statusNote = require('./status-note-b89242d6.js');

const notificationMessageCss = ":host{--width:100%;--radius:var(--scl-radius-8);--border:1px solid var(--scl-color-white);--background-error:hsla(353.79999999999995, 100%, 88.6%, 0.35);--background-warning:hsla(33.5, 100%, 75.1%, 0.3);--background-informational:hsla(190.20000000000005, 100%, 92%, 0.75);--background-success:hsl(98.80000000000001, 49.7%, 61%, 0.2)}.notification-message{border:var(--border);border-radius:var(--radius);width:var(--width);position:relative}.notification-message--variant-error{background:var(--background-error)}.notification-message--variant-warning{background-color:var(--background-warning)}.notification-message--variant-informational{background-color:var(--background-informational)}.notification-message--variant-success{background-color:var(--background-success)}.notification-message__heading{margin:14px 48px 14px 48px;font-weight:var(--scl-font-weight-bold);line-height:var(--scl-font-line-height-125)}.notification-message__text{margin:8px 48px 15px 48px}::slotted(*){font-weight:var(--scl-font-weight-regular)}.notification-message__icon-close{position:absolute;top:9.5px;right:13.5px;color:black}.notification-message__icon-close svg{height:19px;width:19px;padding:6.5px;border-radius:20%}.notification-message__icon-close:hover svg{background-color:white;color:var(--scl-color-primary-hover)}.notification-message__icon-success{position:absolute;top:15px;left:17px;height:20px;width:20px;color:var(--scl-color-background-success)}.notification-message__icon-error{position:absolute;top:13px;left:17px;height:20px;width:20px;color:var(--scl-color-background-error)}.notification-message__icon-information{position:absolute;top:13px;left:17px;height:20px;width:20px;color:var(--scl-color-text-info)}@media screen and (forced-colors: active), (-ms-high-contrast: active){.notification-message__icon-close{color:white}}";

const TIMEOUT = 3000;
const NotificationMessage = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.variant = 'informational';
    this.dismissible = false;
    this.timeout = false;
    this.close = () => {
      this.opened = false;
    };
  }
  componentDidLoad() {
    this.hasSlotText = !!this.hostElement.querySelector("p[slot='text']");
  }
  componentDidRender() {
    if (this.timeout) {
      const timeout = this.timeout === true ? TIMEOUT : this.timeout;
      setTimeout(this.close, timeout);
    }
  }
  connectedCallback() {
    statusNote.statusNote({ source: this.hostElement, type: 'warn' });
  }
  async open() {
    this.opened = true;
  }
  handleIcons() {
    if (this.variant) {
      switch (this.variant) {
        case 'success':
          return (index.h("scale-notification-message-svg", { class: "notification-message__icon-success", "accessibility-title": "success" }));
        case 'informational':
          return (index.h("scale-icon-alert-information", { class: "notification-message__icon-information", "accessibility-title": "information" }));
        case 'error':
          return (index.h("scale-icon-alert-warning", { class: "notification-message__icon-error", "accessibility-title": "error" }));
        case 'warning':
          return (index.h("scale-icon-alert-information", { class: "notification-message__icon-information", color: "#AE461C", "accessibility-title": "information" }));
      }
    }
    return;
  }
  render() {
    if (!this.opened) {
      return null;
    }
    return (index.h(index.Host, null, index.h("div", { part: this.getBasePartMap(), class: this.getCssClassMap(), tabindex: "0" }, index.h("div", { part: "container", class: "notification-message__container" }, this.handleIcons(), index.h("div", { part: "heading", class: "notification-message__heading" }, index.h("slot", null, "\u2003"), this.dismissible && (index.h("scale-icon-action-circle-close", { tabindex: "0", class: "notification-message__icon-close", onClick: () => {
        this.close();
      }, onKeyDown: (e) => {
        if (e.key === 'Enter') {
          this.close();
        }
      }, "accessibility-title": "close" }))), this.hasSlotText && (index.h("div", { part: "text", class: "notification-message__text" }, index.h("slot", { name: "text" })))))));
  }
  getBasePartMap() {
    return this.getCssOrBasePartMap('basePart');
  }
  getCssClassMap() {
    return this.getCssOrBasePartMap('css');
  }
  getCssOrBasePartMap(mode) {
    const name = 'notification-message';
    const prefix = mode === 'basePart' ? '' : `${name}--`;
    return index$1.classnames(name, this.variant && `${prefix}variant-${this.variant}`);
  }
  get hostElement() { return index.getElement(this); }
};
NotificationMessage.style = notificationMessageCss;

exports.scale_notification_message = NotificationMessage;
