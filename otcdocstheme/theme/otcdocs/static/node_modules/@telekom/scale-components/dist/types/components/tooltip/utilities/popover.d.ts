/**
 * @license
 * Scale https://github.com/telekom/scale
 *
 * Copyright (c) 2021 Egor Kirpichev and contributors, Deutsche Telekom AG
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
import { Instance as PopperInstance } from '@popperjs/core';
export default class Popover {
  anchor: HTMLElement;
  isVisible: boolean;
  popover: HTMLElement;
  popper: PopperInstance;
  options: PopoverOptions;
  flip: boolean;
  preventOverflow: boolean;
  constructor(anchor: HTMLElement, popover: HTMLElement, options?: PopoverOptions);
  destroy(): void;
  show(): void;
  hide(): void;
  reposition(): void;
  setFlip(flip: boolean): void;
  setPreventOverflow(preventOverflow: boolean): void;
  setOptions(options: PopoverOptions): void;
  private handleTransitionEnd;
}
interface PopoverOptions {
  distance?: number;
  placement?: 'auto' | 'auto-start' | 'auto-end' | 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'right' | 'right-start' | 'right-end' | 'left' | 'left-start' | 'left-end';
  skidding?: number;
  strategy?: 'absolute' | 'fixed';
  transitionElement?: HTMLElement;
  visibleClass?: string;
  onAfterShow?: () => any;
  onAfterHide?: () => any;
  onTransitionEnd?: (event: TransitionEvent) => any;
}
export {};
